{"ast":null,"code":"import React from 'react';\nimport { useObserver } from 'mobx-react-lite';\nexport var useStoreData = function useStoreData(context, storeSelector, dataSelector) {\n  var value = React.useContext(context);\n\n  if (!value) {\n    throw new Error();\n  }\n\n  var store = storeSelector(value);\n  return useObserver(function () {\n    return dataSelector(store);\n  });\n};","map":{"version":3,"sources":["/Users/bfeele900/Documents/dev/lobbygg-next/hooks/useStoreData.ts"],"names":["React","useObserver","useStoreData","context","storeSelector","dataSelector","value","useContext","Error","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACxBC,OADwB,EAExBC,aAFwB,EAGxBC,YAHwB,EAIvB;AACD,MAAMC,KAAK,GAAGN,KAAK,CAACO,UAAN,CAAiBJ,OAAjB,CAAd;;AAEA,MAAI,CAACG,KAAL,EAAY;AACR,UAAM,IAAIE,KAAJ,EAAN;AACH;;AAED,MAAMC,KAAK,GAAGL,aAAa,CAACE,KAAD,CAA3B;AAEA,SAAOL,WAAW,CAAC,YAAM;AACrB,WAAOI,YAAY,CAACI,KAAD,CAAnB;AACH,GAFiB,CAAlB;AAGH,CAhBM","sourcesContent":["import React from 'react'\nimport { useObserver } from 'mobx-react-lite'\n\nexport const useStoreData = <Selection, ContextData, Store>(\n    context: React.Context<ContextData>,\n    storeSelector: (contextData: ContextData) => Store,\n    dataSelector: (store: Store) => Selection\n) => {\n    const value = React.useContext(context)\n\n    if (!value) {\n        throw new Error();\n    }\n\n    const store = storeSelector(value);\n\n    return useObserver(() => {\n        return dataSelector(store)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}