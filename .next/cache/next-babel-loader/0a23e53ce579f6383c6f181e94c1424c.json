{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bfeele900/Documents/dev/lobbygg-next/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport { ThemeProvider } from 'styled-components';\nimport Header from '../components/header';\nimport { initializeStore } from '../stores/store';\nvar theme = {\n  colors: {\n    primary: '#0070f3'\n  }\n};\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, isServer, store, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n                //\n                // Use getInitialProps as a step in the lifecycle when\n                // we can initialize our store\n                //\n                isServer = false;\n                store = initializeStore(isServer); //\n                // Check whether the page being rendered by the App has a\n                // static getInitialProps method and if so call it\n                //\n\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 7;\n                return Component.getInitialProps(ctx);\n\n              case 7:\n                pageProps = _context.sent;\n\n              case 8:\n                return _context.abrupt(\"return\", {\n                  initialState: getSnapshot(store),\n                  isServer: isServer,\n                  pageProps: pageProps\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"store\", void 0);\n\n    _this.store = initializeStore(props.isServer, props.initialState);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Provider, {\n        store: this.store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/bfeele900/Documents/dev/lobbygg-next/pages/_app.tsx"],"names":["React","App","Provider","getSnapshot","ThemeProvider","Header","initializeStore","theme","colors","primary","MyApp","Component","router","ctx","isServer","store","pageProps","getInitialProps","initialState","props"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAwC,iBAAxC;AAOA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADE,CAAd;;IAMMC,K;;;;;;;;;;;;;;;;AACoCC,gBAAAA,S,QAAAA,S,EAAWC,M,QAAAA,M,EAAQC,G,QAAAA,G;AACvD;AACA;AACA;AACA;AACMC,gBAAAA,Q;AACAC,gBAAAA,K,GAAQT,eAAe,CAACQ,QAAD,C,EAC7B;AACA;AACA;AACA;;AACIE,gBAAAA,S,GAAY,E;;qBACZL,SAAS,CAACM,e;;;;;;uBACUN,SAAS,CAACM,eAAV,CAA0BJ,GAA1B,C;;;AAAlBG,gBAAAA,S;;;iDAEC;AACLE,kBAAAA,YAAY,EAAEf,WAAW,CAACY,KAAD,CADpB;AAELD,kBAAAA,QAAQ,EAARA,QAFK;AAGLE,kBAAAA,SAAS,EAATA;AAHK,iB;;;;;;;;;;;;;;;;;;AAST,iBAAYG,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,+EAAMA,KAAN;;AADsB;;AAEtB,UAAKJ,KAAL,GAAaT,eAAe,CAACa,KAAK,CAACL,QAAP,EAAiBK,KAAK,CAACD,YAAvB,CAA5B;AAFsB;AAGvB;;;;6BAEe;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACJR,SADI,eACJA,SADI;AAAA,UACOK,SADP,eACOA,SADP;AAEZ,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAER,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,CADJ;AAQH;;;;EAxCef,G;;AA2CpB,eAAeS,KAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport { Provider } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { ThemeProvider } from 'styled-components'\nimport Header from '../components/header'\nimport { initializeStore, IStore } from '../stores/store'\n\ntype IOwnProps = {\n    isServer: boolean\n    initialState: IStore\n}\n\nconst theme = {\n    colors: {\n        primary: '#0070f3'\n    }\n}\n\nclass MyApp extends App {\n    public static async getInitialProps({ Component, router, ctx }) {\n      //\n      // Use getInitialProps as a step in the lifecycle when\n      // we can initialize our store\n      //\n      const isServer = typeof window === 'undefined'\n      const store = initializeStore(isServer)\n      //\n      // Check whether the page being rendered by the App has a\n      // static getInitialProps method and if so call it\n      //\n      let pageProps = {}\n      if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx)\n      }\n      return {\n        initialState: getSnapshot(store),\n        isServer,\n        pageProps,\n      }\n    }\n  \n    private store: IStore\n  \n    constructor(props: any) {\n      super(props)\n      this.store = initializeStore(props.isServer, props.initialState) as IStore\n    }\n  \n    public render() {\n        const { Component, pageProps } = this.props\n        return (\n            <Provider store={this.store}>\n                <ThemeProvider theme={theme}>\n                    <Header />\n                    <Component {...pageProps} />\n                </ThemeProvider>\n            </Provider>\n        )\n    }\n  }\n  \nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}