{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bfeele900/Documents/dev/lobbygg-next/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport { ThemeProvider } from 'styled-components';\nimport Header from '../components/header';\nimport { initializeStore } from '../stores/store';\nconst theme = {\n  colors: {\n    primary: '#0070f3'\n  }\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    //\n    // Use getInitialProps as a step in the lifecycle when\n    // we can initialize our store\n    //\n    const isServer = true;\n    const store = initializeStore(isServer); //\n    // Check whether the page being rendered by the App has a\n    // static getInitialProps method and if so call it\n    //\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      initialState: getSnapshot(store),\n      isServer,\n      pageProps\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"store\", void 0);\n\n    this.store = initializeStore(props.isServer, props.initialState);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: this.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/bfeele900/Documents/dev/lobbygg-next/pages/_app.tsx"],"names":["React","App","Provider","getSnapshot","ThemeProvider","Header","initializeStore","theme","colors","primary","MyApp","getInitialProps","Component","router","ctx","isServer","store","pageProps","initialState","constructor","props","render"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAwC,iBAAxC;AAOA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADE,CAAd;;AAMA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AACpB,eAAoBU,eAApB,CAAoC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAApC,EAA4E;AACxE;AACA;AACA;AACA;AACA,UAAMC,QAAQ,OAAd;AACA,UAAMC,KAAK,GAAGV,eAAe,CAACS,QAAD,CAA7B,CANwE,CAOxE;AACA;AACA;AACA;;AACA,QAAIE,SAAS,GAAG,EAAhB;;AACA,QAAIL,SAAS,CAACD,eAAd,EAA+B;AACvBM,MAAAA,SAAS,GAAG,MAAML,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACP;;AACD,WAAO;AACHI,MAAAA,YAAY,EAAEf,WAAW,CAACa,KAAD,CADtB;AAEHD,MAAAA,QAFG;AAGHE,MAAAA;AAHG,KAAP;AAKH;;AAIDE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB;;AAEtB,SAAKJ,KAAL,GAAaV,eAAe,CAACc,KAAK,CAACL,QAAP,EAAiBK,KAAK,CAACF,YAAvB,CAA5B;AACD;;AAEMG,EAAAA,MAAP,GAAgB;AACZ,UAAM;AAAET,MAAAA,SAAF;AAAaK,MAAAA;AAAb,QAA2B,KAAKG,KAAtC;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,SAAD,eAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADJ,CADJ;AAQH;;AAxCmB;;AA2CxB,eAAeP,KAAf","sourcesContent":["import React from 'react'\nimport App, { AppContext } from 'next/app'\nimport { Provider } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { ThemeProvider } from 'styled-components'\nimport Header from '../components/header'\nimport { initializeStore, IStore } from '../stores/store'\n\ntype IOwnProps = {\n    isServer: boolean\n    initialState: IStore\n}\n\nconst theme = {\n    colors: {\n        primary: '#0070f3'\n    }\n}\n\nclass MyApp extends App {\n    public static async getInitialProps({ Component, router, ctx }: AppContext) {\n        //\n        // Use getInitialProps as a step in the lifecycle when\n        // we can initialize our store\n        //\n        const isServer = typeof window === 'undefined'\n        const store = initializeStore(isServer)\n        //\n        // Check whether the page being rendered by the App has a\n        // static getInitialProps method and if so call it\n        //\n        let pageProps = {}\n        if (Component.getInitialProps) {\n                pageProps = await Component.getInitialProps(ctx)\n        }\n        return {\n            initialState: getSnapshot(store),\n            isServer,\n            pageProps,\n        }\n    }\n  \n    private store: IStore\n  \n    constructor(props: any) {\n      super(props)\n      this.store = initializeStore(props.isServer, props.initialState) as IStore\n    }\n  \n    public render() {\n        const { Component, pageProps } = this.props\n        return (\n            <Provider store={this.store}>\n                <ThemeProvider theme={theme}>\n                    <Header />\n                    <Component {...pageProps} />\n                </ThemeProvider>\n            </Provider>\n        )\n    }\n  }\n  \nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}